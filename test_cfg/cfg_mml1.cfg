/*
 *		手動メモリ配置の場合の静的APIのテスト(1)
 *
 *  手動メモリ配置の場合に振舞いが変わる静的APIについてテストする．
 *
 *  $Id: cfg_mml1.cfg 1018 2022-11-27 15:01:51Z ertl-hiro $
 */

#include "cfg_common.h"

//	== target_mem.cfg ==
//	ATT_REG("ROM", { TA_NOWRITE, 0x01000000, 0x00800000 });
//	ATT_REG("RAM", { TA_NULL, 0x01800000, 0x00800000 });
//	DEF_SRG("ROM", "RAM");
//
//	== target_timer.cfg ==
//	KERNEL_DOMAIN {
//		ATT_INI({ TA_NULL, 0, _kernel_target_hrt_initialize });
//		ATT_TER({ TA_NULL, 0, _kernel_target_hrt_terminate });
//		CFG_INT(INTNO_HRT, { TA_ENAINT | INTATR_HRT, INTPRI_HRT });
//		DEF_INH(INHNO_HRT, { TA_NULL, _kernel_target_hrt_handler });
//	}
//	KERNEL_DOMAIN {
//		ATT_INI({ TA_NULL, 0, _kernel_target_twdtimer_initialize });
//		ATT_TER({ TA_NULL, 0, _kernel_target_twdtimer_terminate });
//		CFG_INT(INTNO_TWDTIMER, { TA_ENAINT|INTATR_TWDTIMER, INTPRI_TWDTIMER });
//		DEF_INH(INHNO_TWDTIMER, { TA_NULL, _kernel_target_twdtimer_handler });
//	}

ATT_REG("RAM2", { TA_NULL, 0xf2000000, 0x1000000 });

KERNEL_DOMAIN {
  ATT_MEM({ TA_NOWRITE|TA_EXEC, 0x01000000, 0x00200000 });
  ATT_MEM({ TA_NULL, 0x01800000, 0x00200000 });

  CLASS(CLS_PRC1) {
	/* システムタスク（カーネルドメインに属するタスク）に対しては，*/
	/* stkにNULLを指定することができる．*/
	CRE_TSK(TASK1, { TA_ACT, 1, task1, MID_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(TASK2, { TA_NULL, 2, task2, HIGH_PRIORITY,
												STACK_SIZE, 0xf0000000 });

	/* カーネルドメインに属し，アクセス許可ベクタがデフォルトの値の */
	/* 固定長メモリプールに対しては，mpfの記述を省略することと，NULL */
	/* を指定することができる．*/
	CRE_MPF(MPF1, { TA_NULL, 10, 100 });
	CRE_MPF(MPF2, { TA_NULL, 20, 200, NULL, NULL });
	CRE_MPF(MPF3, { TA_NULL, 10, 100, mpf_MPF3, NULL });
	CRE_MPF(MPF4, { TA_NULL, 20, 200, 0xf3000000, NULL });
  }
  ATT_MEM({ TA_NULL, 0xf0000000, 0x1000000 });
  ATT_MEM({ TA_NULL, 0xf3000000, 0x1000000 });
}

DOMAIN(DOM1) {
  CLASS(CLS_PRC1) {
	CRE_TSK(TASK3, { TA_NULL, 3, task3, HIGH_PRIORITY,
												STACK_SIZE, 0xf2000000 });

	CRE_MPF(MPF5, { TA_NULL, 10, 100, 0xf1000000, NULL });
	CRE_MPF(MPF6, { TA_NULL, 20, 200, mpf_MPF6, NULL });
  }
  ATT_MEM({ TA_NULL, 0xf1000000, 0x1000000 });
}
